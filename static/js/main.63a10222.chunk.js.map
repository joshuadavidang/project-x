{"version":3,"sources":["components/AvatarSwiper.js","components/NavBar.js","redux/reducers/authentication.js","redux/reducers/content.js","components/BottomNavBar.js","App.js","redux/store.js","firebase.js","pages/LoginPage.js","pages/SignUpPage.js","assets/images/forgetpassword.svg","pages/ForgetPassword.js","data/ScienceContent.js","pages/SciencePage.js","data/EnglishContent.js","pages/EnglishPage.js","data/MathContent.js","pages/MathPage.js","pages/AccountsPage.js","pages/PreLoginPage.js","pages/DetailedData/DetailedContentPage.js","index.js"],"names":["config","genConfig","AvatarSwiper","className","style","width","height","NavBar","avatarData","navigate","useNavigate","useState","selectedEngBtnState","setSelectedEngBtnState","selectedMathBtnState","setSelectedMathBtnState","selectedScienceState","setSelectedScienceState","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","authenticationSlice","createSlice","name","initialState","value","email","isAuthenticated","uid","isLoaded","reducers","LOGIN_ACTION","state","action","payload","LOGOUT_ACTION","actions","contentSlice","subject","CONTENT_ACTION","BottomNavBar","dispatch","useDispatch","Account","setAccount","getData","useSelector","authenticationReducer","auth","getAuth","signOut","then","Swal","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","message","dismiss","DismissReason","cancel","catch","error","App","role","configureStore","reducer","contentReducer","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","getDatabase","LoginPage","setEmailState","password","setPasswordState","setIsAuthenticated","loadingAnimation","setLoadingAnimation","user","useEffect","console","log","to","color","type","placeholder","onChange","e","target","setTimeout","signInWithEmailAndPassword","userCredential","avatar","photoURL","avatarName","displayName","errorMessage","size","SignUpPage","setAvatar","setAvatarName","createUserWithEmailAndPassword","updateProfile","currentUser","ForgetPassword","src","ForgetPasswordImage","alt","sendPasswordResetEmail","ScienceContent","id","uuidv4","theme","themeOpener","updated","Date","toDateString","SciencePage","map","data","getDetailsBtn","EnglishContent","chapter","EnglishPage","MathContent","content","MathPage","AccountsPage","loading","setLoading","PreLoginPage","DetailedContentPage","params","useParams","toSearch","themeId","filter","o","includes","ReactDOM","render","store","path","element","padding","document","getElementById"],"mappings":"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","file":"static/js/main.63a10222.chunk.js","sourcesContent":["import React from \"react\";\nimport Avatar, { genConfig } from \"react-nice-avatar\";\n\nconst config = genConfig();\n\nconst AvatarSwiper = () => {\n  return (\n    <div>\n      <div className=\"flex justify-center\">\n        <Avatar style={{ width: \"8rem\", height: \"8rem\" }} {...config} />\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarSwiper;\n","import React, { useState } from \"react\";\n// import { getAuth, signOut } from \"firebase/auth\";\n// import Swal from \"sweetalert2\";\n// import Avatar from \"react-avatar\";\n// import { useSelector } from \"react-redux\"; // to access state data, to dispatch data\nimport { useNavigate } from \"react-router\";\n// import { LOGOUT_ACTION } from \"../redux/reducers/authentication\";\n// import { CONTENT_ACTION } from \"../redux/reducers/content\";\nimport AvatarSwiper from \"./AvatarSwiper\";\n\nconst NavBar = ({ avatarData }) => {\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // const contentData = useSelector((state) => state.contentReducer.value);\n\n  const [selectedEngBtnState, setSelectedEngBtnState] = useState(false);\n  const [selectedMathBtnState, setSelectedMathBtnState] = useState(false);\n  const [selectedScienceState, setSelectedScienceState] = useState(false);\n\n  const ScienceBtn = () => {\n    setSelectedScienceState(true);\n    setSelectedMathBtnState(false);\n    setSelectedEngBtnState(false);\n    navigate(\"/app/sciencepage\");\n  };\n\n  const EnglishBtn = () => {\n    setSelectedEngBtnState(true);\n    setSelectedMathBtnState(false);\n    setSelectedScienceState(false);\n    navigate(\"/app/englishpage\");\n  };\n\n  const MathBtn = () => {\n    setSelectedMathBtnState(true);\n    setSelectedEngBtnState(false);\n    setSelectedScienceState(false);\n    navigate(\"/app/mathpage\");\n  };\n\n  return (\n    <div>\n      <ul className=\"flex flex-col overflow-hidden\">\n        {/* <nav className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 flex flex-col h-4/5 px-4 py-4 mt-6 ml-9 text-white rounded-3xl \"> */}\n        <nav className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 flex flex-col h-screen px-4 text-white rounded-r-3xl \">\n          <div className=\"flex justify-center m-8\">\n            <AvatarSwiper />\n          </div>\n          <div className=\"text-center mb-6\">\n            <span className=\"font-bold font-mono\">Hey,</span>{\" \"}\n            <span className=\"font-mono\">\n              {avatarData} {\"\"} 👋\n            </span>{\" \"}\n          </div>\n\n          {/* ********* Science Icon ********* */}\n          <div className=\"flex justify-center\">\n            <li\n              className={\n                selectedScienceState === true &&\n                selectedMathBtnState === false &&\n                selectedEngBtnState === false\n                  ? \"text-center py-2 border-r-8 w-72 flex p-3 space-x-4 mt-0.5 justify-center cursor-pointer my-2\"\n                  : \"text-center py-2 w-72 flex p-3 space-x-4 mt-0.5 justify-center cursor-pointer my-2\"\n              }\n              onClick={ScienceBtn}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\"\n                />\n              </svg>\n\n              <span className=\"font-mono\">Science</span>\n            </li>\n          </div>\n\n          {/* ********* English Icon ********* */}\n          <div className=\"flex justify-center\">\n            <li\n              className={\n                selectedEngBtnState === true && selectedMathBtnState === false\n                  ? // contentData.isLoaded === true\n                    \"text-center py-2 border-r-8 w-72 flex p-3 space-x-4 mt-0.5 justify-center cursor-pointer my-2\"\n                  : \"text-center py-2 w-72 flex p-3 space-x-4 mt-0.5 justify-center cursor-pointer my-2\"\n              }\n              onClick={EnglishBtn}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                />\n              </svg>\n\n              <span className=\"font-mono\">English</span>\n            </li>\n          </div>\n\n          {/* ********* Math Icon ********* */}\n          {/* eslint-disable-next-line */}\n          <div className=\"flex justify-center\">\n            <li\n              className={\n                selectedMathBtnState === true && selectedEngBtnState === false\n                  ? \"text-center py-2 border-r-8 w-72 flex p-3 space-x-4 mt-0.5 justify-center cursor-pointer my-2\"\n                  : \"text-center py-2 w-72 flex p-3 space-x-4 mt-0.5 justify-center cursor-pointer my-2\"\n              }\n              onClick={MathBtn}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                <path d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\" />\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\"\n                />\n              </svg>\n\n              <span className=\"font-mono\">Math</span>\n            </li>\n          </div>\n        </nav>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authenticationSlice = createSlice({\n  name: \"authentication\",\n  initialState: {\n    value: { email: \"\", isAuthenticated: \"\", uid: \"\", isLoaded: false },\n  },\n  // functions to alter values\n  reducers: {\n    LOGIN_ACTION: (state, action) => {\n      // new state, value changed after logging in\n      state.value = action.payload;\n    },\n    LOGOUT_ACTION: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { LOGIN_ACTION, LOGOUT_ACTION } = authenticationSlice.actions;\n\nexport default authenticationSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const contentSlice = createSlice({\n  name: \"content\",\n  initialState: { value: { subject: \"no subject\", isLoaded: false } },\n  // functions to alter values\n  reducers: {\n    CONTENT_ACTION: (state, action) => {\n      // new state, value changed after logging in\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { CONTENT_ACTION } = contentSlice.actions;\n\nexport default contentSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { useDispatch, useSelector } from \"react-redux\"; // to access state data, to dispatch data\nimport { LOGOUT_ACTION } from \"../redux/reducers/authentication\";\nimport { CONTENT_ACTION } from \"../redux/reducers/content\";\n\nconst BottomNavBar = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // const [Inventory, setInventory] = useState(false);\n  const [Account, setAccount] = useState(false);\n\n  const getData = useSelector((state) => state.authenticationReducer.value);\n  // const contentData = useSelector((state) => state.contentReducer.value);\n\n  const accountBtn = () => {\n    // setInventory(false);\n    setAccount(true);\n    dispatch(CONTENT_ACTION({ subject: \"Account\", isLoaded: true }));\n    navigate(\"/app/accountspage\");\n  };\n\n  // const inventoryBtn = () => {\n  //   setAccount(false);\n  //   setInventory(true);\n  //   dispatch(CONTENT_ACTION({ isLoaded: false }));\n  // };\n\n  const signOutBtn = () => {\n    const auth = getAuth();\n    signOut(auth)\n      .then(() => {\n        Swal.fire({\n          title: \"Logout?\",\n          text: \"You will be signed out\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonText: \"Yes\",\n          cancelButtonText: \"No\",\n          reverseButtons: true,\n        }).then((result) => {\n          if (result.isConfirmed) {\n            Swal.fire(\"\", \"Logout successful\", \"success\");\n            // Sign-out successful.\n            dispatch(\n              LOGOUT_ACTION({\n                email: getData.email,\n                isAuthenticated: false,\n                message: \"User signed out\",\n              })\n            );\n\n            navigate(\"/\");\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\n            Swal.fire(\"Welcome back\", \"\", \"success\");\n          }\n        });\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  return (\n    <div>\n      <div className=\" flex justify-end items-center space-x-8 pr-12\">\n        {/* <div\n          onClick={inventoryBtn}\n          className={\n            Inventory === true || contentData.isLoaded === false\n              ? \"flex items-center space-x-2 cursor-pointer bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:from-pink-500 hover:to-yellow-500 text-white px-4 py-3 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              : \"flex items-center space-x-2 cursor-pointer\"\n          }\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"\n            />\n          </svg>\n\n          <span className=\"font-mono text-sm\">Inventory</span>\n        </div> */}\n\n        <div\n          onClick={accountBtn}\n          className={\n            Account === true\n              ? \"flex items-center space-x-2 cursor-pointer bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:from-pink-500 hover:to-yellow-500 text-white px-4 py-3 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              : \"flex items-center space-x-2 cursor-pointer\"\n          }\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          <span className=\"font-mono text-sm\">Settings</span>\n        </div>\n\n        <div\n          onClick={signOutBtn}\n          className=\"flex items-center space-x-2 cursor-pointer\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n            />\n          </svg>\n\n          <span className=\"font-mono text-sm\">Exit</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BottomNavBar;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport { Outlet } from \"react-router-dom\";\nimport BottomNavBar from \"./components/BottomNavBar\";\n\nfunction App() {\n  return (\n    <div className=\"flex\">\n      <aside className=\"w-auto bg-white h-screen\">\n        <NavBar />\n      </aside>\n\n      <main\n        role=\"main\"\n        className=\"w-screen text-center h-screen overflow-scroll\"\n      >\n        <div className=\"h-5/6\">\n          <Outlet />\n        </div>\n\n        <div className=\"h-1/6\">\n          <BottomNavBar />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authenticationSlice from \"./reducers/authentication\";\nimport contentSlice from \"./reducers/content\";\n\nexport default configureStore({\n  reducer: {\n    authenticationReducer: authenticationSlice,\n    contentReducer: contentSlice,\n  },\n});\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjaVXf5f-O7Ao46me8U5v7PE4s98aa3bU\",\n  authDomain: \"project-x-1d9e6.firebaseapp.com\",\n  projectId: \"project-x-1d9e6\",\n  storageBucket: \"project-x-1d9e6.appspot.com\",\n  messagingSenderId: \"888412838530\",\n  appId: \"1:888412838530:web:7f38fb770995e8f280f29b\",\n  databaseURL:\n    \"https://project-x-1d9e6-default-rtdb.asia-southeast1.firebasedatabase.app/\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\nexport { database }\nexport default app;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n// eslint-disable-next-line\nimport app from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n// import Login from \"../assets/images/login.svg\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\"; // useSelect - access data from store |||| useDispatch - to send data to store\nimport { LOGIN_ACTION } from \"../redux/reducers/authentication\";\nimport AvatarSwiper from \"../components/AvatarSwiper\";\n\nconst LoginPage = () => {\n  const [email, setEmailState] = useState(\"\");\n  const [password, setPasswordState] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loadingAnimation, setLoadingAnimation] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.authenticationReducer.value);\n\n  useEffect(() => {\n    console.log(\"isAuthenticated: \" + isAuthenticated);\n    console.log(user);\n  }, [isAuthenticated, user]);\n\n  const loginBtn = () => {\n    setLoadingAnimation(true);\n\n    setTimeout(() => {\n      const auth = getAuth();\n      signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n          const user = userCredential.user;\n          console.log(user);\n          dispatch(\n            LOGIN_ACTION({\n              avatar: user.photoURL,\n              avatarName: user.displayName,\n              email: user.email,\n              isAuthenticated: true,\n              uid: user.uid,\n            })\n          );\n\n          setIsAuthenticated(true);\n          Swal.fire(\"\", \"Signed in successful\", \"success\");\n          navigate(\"/app\");\n\n          // if (user.emailVerified === true) {\n          //   setIsAuthenticated(true);\n          //   Swal.fire(\"\", \"Signed in successful\", \"success\");\n          //   history.push(\"/landingpage\");\n          // } else {\n          //   Swal.fire({\n          //     text: \"Please verify your email before attempting to login\",\n          //     icon: \"warning\",\n          //     confirmButtonText: \"OK\",\n          //   });\n          // }\n        })\n        .catch((error) => {\n          const errorMessage = error.message;\n          console.log(errorMessage);\n          Swal.fire({\n            title: errorMessage,\n            text: \"Please try again\",\n            icon: \"error\",\n            confirmButtonText: \"OK\",\n          });\n        }, setLoadingAnimation(false));\n    }, 600);\n  };\n\n  return (\n    <div>\n      <div className=\" min-h-screen w-screen bg-gray-200 sm: px-6 flex flex-col justify-center bg-cover bg-no-repeat bg-ezreal-image min-w-full h-screen\">\n        <div className=\"p-1 xs:p-0 mx-auto md:w-full md:max-w-md\">\n          <div className=\"shadow bg-white w-full rounded-lg divide-y divide-gray-200\">\n            <div className=\"px-10 py-10\">\n              <Link to=\"/\">\n                {\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                  />\n                </svg>\n              </Link>\n\n              <div className=\"flex justify-center\">\n                {/* <img src={Login} alt=\"login\" className=\"mb-7 w-3/5\" /> */}\n                <AvatarSwiper />\n              </div>\n\n              <h1 className=\" text-center text-lg mb-3 font-mono mb-6 mt-8\">\n                Login to your account\n              </h1>\n\n              {/* <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                Email\n              </label> */}\n\n              <div className=\"flex bg-gray-100 p-3 space-x-4 mb-6 rounded-lg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  color=\"gray\"\n                >\n                  <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                  <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                </svg>\n\n                <input\n                  className=\"bg-gray-100 outline-none text-sm w-full\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmailState(e.target.value)}\n                />\n              </div>\n\n              {/* <div className=\"md:grid grid-cols-2 gap-x-20\">\n                <div>\n                  <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                    Password\n                  </label>\n                </div>\n\n                <div className=\"mb-1\">\n                  <label className=\"text-sm text-green-600 font-mono\">\n                    <Link to=\"/forgetpassword\"> Forgot Password?</Link>\n                  </label>\n                </div>\n              </div> */}\n\n              <div className=\"flex bg-gray-100 p-3 space-x-4 mb-7 mt-0.5 rounded-lg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  color=\"gray\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n                  />\n                </svg>\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPasswordState(e.target.value)}\n                  className=\"bg-gray-100 outline-none text-sm w-full\"\n                />\n              </div>\n\n              <button\n                onClick={loginBtn}\n                type=\"button\"\n                className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 \n                hover:from-pink-500 hover:to-yellow-500 text-white w-full py-3 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              >\n                {loadingAnimation === true ? (\n                  <BeatLoader size={7} color={\"white\"} />\n                ) : (\n                  <span className=\"inline-block tracking-wider\">Login</span>\n                )}\n              </button>\n\n              <p className=\"text-center pt-7 text-gray-600 text-sm font-mono\">\n                Don't have an account? Register{\" \"}\n                <Link to=\"/signuppage\">\n                  <span className=\"hover:text-green-400 underline font-bold\">\n                    here\n                  </span>\n                </Link>\n              </p>\n\n              <div className=\"text-center mt-2\">\n                <label className=\"text-sm text-green-600 font-mono\">\n                  <Link to=\"/forgetpassword\"> Reset Password</Link>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  updateProfile,\n  // sendEmailVerification,\n} from \"firebase/auth\";\n// eslint-disable-next-line\nimport app from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Swal from \"sweetalert2\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport AvatarSwiper from \"../components/AvatarSwiper\";\n\nconst SignUpPage = () => {\n  // eslint-disable-next-line\n  const [avatar, setAvatar] = useState(\"\");\n  const [avatarName, setAvatarName] = useState(\"\");\n  const [email, setEmailState] = useState(\"\");\n  const [password, setPasswordState] = useState(\"\");\n  const [loadingAnimation, setLoadingAnimation] = useState(false);\n\n  // useEffect(() => {\n  //   console.log(isAuthenticated);\n  // }, []);\n\n  let navigate = useNavigate();\n\n  const signUpBtn = () => {\n    setLoadingAnimation(true);\n    setAvatar(\"figuring out\");\n\n    setTimeout(() => {\n      const auth = getAuth();\n      createUserWithEmailAndPassword(auth, email, password)\n        .then(() => {\n          updateProfile(auth.currentUser, {\n            photoURL: \"incoming\",\n            displayName: avatarName,\n          });\n\n          Swal.fire(\"\", \"Account registered\", \"success\");\n          navigate(\"/loginpage\");\n\n          // sendEmailVerification(auth.currentUser).then(() => {\n          //   Swal.fire(\n          //     {\n          //       text: \"Click on the link in your email to verify your account.\",\n          //       icon: \"info\",\n          //       confirmButtonText: \"OK\",\n          //     },\n          //     history.push(\"/loginpage\")\n          //   );\n          // });\n        })\n        .catch((error) => {\n          const errorMessage = error.message;\n          console.log(errorMessage);\n          Swal.fire({\n            title: errorMessage,\n            text: \"Please try again\",\n            icon: \"error\",\n            confirmButtonText: \"OK\",\n          });\n        }, setLoadingAnimation(false));\n    }, 600);\n  };\n\n  return (\n    <div>\n      <div className=\"min-h-screen w-screen bg-gray-200 sm: px-6 flex flex-col justify-center overflow-y-hidden bg-cover bg-no-repeat bg-ezreal-image min-w-full h-screen\">\n        <div className=\"p-1 xs:p-0 mx-auto md:w-full md:max-w-md\">\n          <div className=\"bg-white shadow w-full rounded-lg divide-y divide-gray-200\">\n            <div className=\"px-10 py-10\">\n              <Link to=\"/loginpage\">\n                {\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                  />\n                </svg>\n              </Link>\n\n              <div className=\"flex justify-center\">\n                <AvatarSwiper />\n              </div>\n\n              <h1 className=\"font-mono text-center text-lg mb-6 mt-8\">\n                Sign up for an account\n              </h1>\n\n              {/* Avatar's Name */}\n              {/* <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                Give your avatar a name\n              </label> */}\n\n              <div className=\"flex bg-gray-100 p-3 space-x-4 mb-3 rounded-lg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  color=\"gray\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n\n                <input\n                  className=\"bg-gray-100 outline-none text-sm w-full\"\n                  type=\"text\"\n                  name=\"avatarName\"\n                  value={avatarName}\n                  placeholder=\"Give your avatar a name\"\n                  onChange={(e) => setAvatarName(e.target.value)}\n                />\n              </div>\n\n              {/* Email */}\n              <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                {/* Email */}\n              </label>\n\n              <div className=\"flex bg-gray-100 p-3 space-x-4 mb-3 rounded-lg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  color=\"gray\"\n                >\n                  <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                  <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                </svg>\n\n                <input\n                  className=\"bg-gray-100 outline-none text-sm w-full\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  placeholder=\"New email\"\n                  onChange={(e) => setEmailState(e.target.value)}\n                />\n              </div>\n\n              {/* Password */}\n              <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                {/* Password */}\n              </label>\n\n              <div className=\"flex bg-gray-100 p-3 space-x-4 mb-7 rounded-lg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  color=\"gray\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n                  />\n                </svg>\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  placeholder=\"New password\"\n                  onChange={(e) => setPasswordState(e.target.value)}\n                  className=\"bg-gray-100 outline-none text-sm w-full\"\n                />\n              </div>\n              <button\n                onClick={signUpBtn}\n                type=\"button\"\n                className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\n                hover:from-pink-500 hover:to-yellow-500 text-white w-full py-3 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              >\n                {loadingAnimation === true ? (\n                  <BeatLoader size={7} color={\"white\"} />\n                ) : (\n                  <span className=\"inline-block tracking-wider\">Register</span>\n                )}\n              </button>\n\n              <p className=\"text-center pt-7 text-gray-600 font-mono text-sm\">\n                Have an account? Login{\" \"}\n                <Link to=\"/loginpage\">\n                  <span className=\"hover:text-green-400 underline font-bold\">\n                    here\n                  </span>\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n","export default __webpack_public_path__ + \"static/media/forgetpassword.8c5534ff.svg\";","import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport ForgetPasswordImage from \"../assets/images/forgetpassword.svg\";\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst ForgetPassword = () => {\n  const [email, setEmailState] = useState(\"\");\n  const [loadingAnimation, setLoadingAnimation] = useState(false);\n  const navigate = useNavigate();\n\n  const resetPassword = () => {\n    setLoadingAnimation(true);\n\n    setTimeout(() => {\n      const auth = getAuth();\n      sendPasswordResetEmail(auth, email)\n        .then(() => {\n          // Password reset email sent!\n          Swal.fire(\"\", \"Check your email for further instructions\", \"success\");\n          navigate(\"/loginpage\");\n        })\n        .catch((error) => {\n          const errorMessage = error.message;\n          Swal.fire(\"\", errorMessage, \"error\");\n        }, setLoadingAnimation(false));\n    }, 600);\n  };\n\n  return (\n    <div>\n      <div className=\" min-h-screen w-screen bg-gray-200 sm: px-6 flex flex-col justify-center bg-cover bg-no-repeat bg-ezreal-image min-w-full h-screen\">\n        <div className=\"p-1 xs:p-0 mx-auto md:w-full md:max-w-md\">\n          <div className=\"shadow bg-white w-full rounded-lg divide-y divide-gray-200\">\n            <div className=\"px-10 py-10\">\n              <Link to=\"/loginpage\">\n                {\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                  />\n                </svg>\n              </Link>\n\n              <div className=\"flex justify-center\">\n                <img\n                  src={ForgetPasswordImage}\n                  alt=\"forgetpassword\"\n                  className=\"mb-7 w-3/5\"\n                />\n              </div>\n\n              <h1 className=\"font-mono text-center text-md mb-3\">\n                Enter your email to reset your password\n              </h1>\n\n              {/* <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                Email\n              </label> */}\n\n              <div className=\"flex bg-gray-100 p-3 space-x-4 mb-7 mt-0.5 rounded-lg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  color=\"gray\"\n                >\n                  <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                  <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                </svg>\n\n                <input\n                  className=\"bg-gray-100 outline-none text-sm w-full\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmailState(e.target.value)}\n                />\n              </div>\n\n              <button\n                onClick={resetPassword}\n                type=\"button\"\n                className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 \n                  hover:from-pink-500 hover:to-yellow-500 text-white w-full py-3 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              >\n                {loadingAnimation === true ? (\n                  <BeatLoader size={7} color={\"white\"} />\n                ) : (\n                  <span className=\"inline-block\">Reset Password</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n","import { v4 as uuidv4 } from \"uuid\";\n\nlet ScienceContent = [\n  {\n    id: uuidv4(),\n    subject: \"Science\",\n    theme: \"Diversity\",\n    themeOpener: [\n      \"Classification: Living and Non-Living Things\",\n      \"Plants\",\n      \"Animals\",\n      \"Fungi and Bacteria\",\n      \"Exploring Materials\",\n    ],\n    updated: new Date().toDateString(),\n  },\n  {\n    id: uuidv4(),\n    subject: \"Science\",\n    theme: \"Cycles\",\n    themeOpener: [\n      \"Life Cycles of Some Animals\",\n      \"Life Cycle of Plants\",\n      \"Matter\",\n    ],\n    updated: new Date().toDateString(),\n  },\n  {\n    id: uuidv4(),\n    subject: \"Science\",\n    theme: \"Systems\",\n    updated: new Date().toDateString(),\n  },\n  {\n    id: uuidv4(),\n    subject: \"Science\",\n    theme: \"Interactions\",\n    updated: new Date().toDateString(),\n  },\n  {\n    id: uuidv4(),\n    subject: \"Science\",\n    theme: \"Energy\",\n    updated: new Date().toDateString(),\n  },\n];\n\nexport default ScienceContent;\n","import React from \"react\";\nimport ScienceContent from \"../data/ScienceContent\";\nimport { useNavigate } from \"react-router\";\n\nconst SciencePage = () => {\n  const navigate = useNavigate();\n\n  const getDetailsBtn = (data) => {\n    // console.log(data.themeOpener);\n    navigate(`/app/sciencepage/${data.theme}`);\n  };\n\n  return (\n    // Main Div\n    <div>\n      <div className=\"px-24 py-10 text-start\">\n        <span className=\"font-bold font-mono text-2xl\">Theme</span>{\" \"}\n      </div>\n\n      <div className=\"flex flex-row flex-wrap px-24 gap-x-14 gap-y-10 cursor-pointer font-mono\">\n        {ScienceContent.map((data) => (\n          <div\n            className=\"w-3/12 p-16 rounded-md shadow-lg bg-white bg-cover bg-no-repeat bg-sea-image text-white\"\n            onClick={() => getDetailsBtn(data)}\n            key={data.id}\n          >\n            <div className=\"flex justify-center\">\n              <p id=\"name\" className=\"text-lg font-semibold\">\n                {data.theme}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SciencePage;\n","import { v4 as uuidv4 } from \"uuid\";\n\nlet EnglishContent = [\n  {\n    id: uuidv4(),\n    subject: \"English\",\n    chapter: \"Grammar\",\n    updated: new Date().toDateString(),\n  },\n  {\n    id: uuidv4(),\n    subject: \"English\",\n    chapter: \"Verbs\",\n    updated: new Date().toDateString(),\n  },\n];\n\nexport default EnglishContent;\n","import React from \"react\";\nimport EnglishContent from \"../data/EnglishContent\";\n\nconst EnglishPage = () => {\n  // const getData = useSelector((state) => state.authenticationReducer.value);\n  console.log(EnglishContent);\n\n  return (\n    // Main Div\n    <div>\n      <div className=\"px-24 py-10 text-start\">\n        <span className=\"font-bold font-mono text-2xl\">English</span>{\" \"}\n        {/* <span className=\"font-mono text-xl\">\n          {getData.avatarName}! {\"\"} 👋\n        </span>{\" \"} */}\n      </div>\n\n      <div className=\"flex flex-row px-24 gap-x-14\">\n        {EnglishContent.map((data) => (\n          <div\n            className=\"max-w-sm p-6 rounded-md tracking-wide shadow-lg bg-white\"\n            key={data.id}\n          >\n            <div id=\"header\" className=\"flex items-center mb-4\">\n              <img\n                alt=\"avatar\"\n                className=\"w-20 rounded-full border-2 border-gray-300\"\n                src=\"https://picsum.photos/seed/picsum/200\"\n              />\n              <div id=\"header-text\" className=\"leading-5 ml-6 sm\">\n                <h4 id=\"name\" className=\"text-xl font-semibold\">\n                  {data.chapter}\n                </h4>\n              </div>\n            </div>\n\n            <div id=\"quote\">\n              <q className=\"italic text-gray-600\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </q>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n    // End of main div\n  );\n};\n\nexport default EnglishPage;\n","import { v4 as uuidv4 } from \"uuid\";\n\nlet MathContent = [\n  {\n    id: uuidv4(),\n    subject: \"Math\",\n    chapter: \"Algebra\",\n    content: [\"a2+b2=c2\", \"b2+b2=cd2\"],\n    updated: new Date().toDateString(),\n  },\n  {\n    id: uuidv4(),\n    subject: \"Math\",\n    chapter: \"Decimals\",\n    updated: new Date().toDateString(),\n  },\n];\n\nexport default MathContent;\n","import React from \"react\";\nimport MathContent from \"../data/MathContent\";\n\nconst MathPage = () => {\n  // console.log(MathContent[0].content);\n\n  return (\n    // Main Div\n    <div>\n      <div className=\"px-24 py-10 text-start\">\n        <span className=\"font-bold font-mono text-2xl\">Math</span>{\" \"}\n        {/* <span className=\"font-mono text-xl\">\n          {getData.avatarName}! {\"\"} 👋\n        </span>{\" \"} */}\n      </div>\n\n      <div className=\"flex flex-row px-24 gap-x-14\">\n        {MathContent.map((data) => (\n          <div\n            className=\"max-w-sm p-6 rounded-md tracking-wide shadow-lg bg-white\"\n            key={data.id}\n          >\n            <div id=\"header\" className=\"flex items-center mb-4\">\n              <img\n                alt=\"avatar\"\n                className=\"w-20 rounded-full border-2 border-gray-300\"\n                src=\"https://picsum.photos/seed/picsum/200\"\n              />\n              <div id=\"header-text\" className=\"leading-5 ml-6 sm\">\n                <h4 id=\"name\" className=\"text-xl font-semibold\">\n                  {data.chapter}\n                </h4>\n              </div>\n            </div>\n\n            <div id=\"quote\">\n              <q className=\"italic text-gray-600\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </q>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MathPage;\n","import React, { useState } from \"react\";\n// import Avatar from \"react-avatar\";\nimport AvatarSwiper from \"../components/AvatarSwiper\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CONTENT_ACTION } from \"../redux/reducers/content\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst AccountsPage = () => {\n  const [loading, setLoading] = useState(false);\n  const getData = useSelector((state) => state.authenticationReducer.value);\n  console.log(getData);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const forgetPassword = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      dispatch(CONTENT_ACTION({ isLoaded: false }));\n      navigate(\"/forgetpassword\");\n    }, 600);\n  };\n\n  return (\n    <div className=\"mt-12 p-12 w-1/2\">\n      <div className=\"p-10 w-auto rounded-md tracking-wide shadow-lg\">\n        {/* <Avatar name={getData.email} size=\"100\" round={true} /> */}\n        <AvatarSwiper />\n\n        <div className=\"grid grid-cols-1 gap-4 \">\n          <div className=\"bg-white-100 p-3 rounded-lg mb-2\">\n            <h4 id=\"name\" className=\"text-sm font-semibold \">\n              {getData.avatarName} - {getData.avatar}\n            </h4>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-4\">\n          <div className=\"bg-gray-100 p-3 rounded-lg mb-6\">\n            <h4 id=\"name\" className=\"text-sm font-semibold \">\n              {getData.email}\n            </h4>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-4\">\n          <div className=\"bg-gray-100 p-3 rounded-lg mb-6\">\n            {getData.uid === \"\" ? (\n              <h5 id=\"name\" className=\" text-sm font-semibold\">\n                Please login to view your uuid\n              </h5>\n            ) : (\n              <h5 id=\"name\" className=\" text-sm font-semibold\">\n                {getData.uid}{\" \"}\n              </h5>\n            )}\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-4\">\n          <button\n            onClick={forgetPassword}\n            type=\"button\"\n            id=\"name\"\n            className=\" text-sm font-semibold bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\n                hover:from-pink-500 hover:to-yellow-500 text-white w-full py-3 rounded-lg  font-mono tracking-wide\"\n          >\n            {loading === true ? <BeatLoader size={7} /> : \" Change Password\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountsPage;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PulseLoader } from \"react-spinners\";\n\nconst PreLoginPage = () => {\n  const [loadingAnimation, setLoadingAnimation] = useState(false);\n  let navigate = useNavigate();\n\n  const playBtn = () => {\n    setLoadingAnimation(true);\n    setTimeout(() => {\n      setLoadingAnimation(false);\n      navigate(\"/loginpage\");\n    }, 800);\n  };\n\n  return (\n    <div className=\"bg-cover bg-no-repeat bg-ezreal-image min-w-full h-screen flex items-center justify-center\">\n      <div className=\"p-10 \">\n        <div className=\"flex justify-center\">\n          <p className=\"text-5xl text-pink-100 font-mono\">Mission Possible</p>\n        </div>\n\n        <div className=\"flex justify-center mt-10\">\n          <button\n            onClick={playBtn}\n            type=\"button\"\n            className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\n                hover:from-pink-500 hover:to-yellow-500 text-white w-full py-3 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n          >\n            {loadingAnimation === true ? (\n              <PulseLoader size={7} color={\"white\"} />\n            ) : (\n              <span className=\"font-mono tracking-widest\">PLAY</span>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PreLoginPage;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ScienceContent from \"../../data/ScienceContent\";\n\nconst DetailedContentPage = () => {\n  let params = useParams();\n  // console.log(ScienceContent);\n  // console.log(params);\n\n  let toSearch = params.themeId; // Diversity\n  let result = ScienceContent.filter((o) => o.theme.includes(toSearch));\n  console.log(result[0].themeOpener);\n\n  return (\n    <div>\n      <div className=\"px-24 py-10 text-start\">\n        {/* <span className=\"font-bold font-mono text-2xl text-center bg-black p-6 rounded-3xl\"> */}\n        <span\n          className=\"bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 \n                text-white w-1/3 py-3 rounded-2xl text-lg shadow-sm font-semibold text-center inline-block font-mono\"\n        >\n          {params.themeId}\n        </span>{\" \"}\n      </div>\n\n      {result[0].themeOpener.map((data) => (\n        <div className=\"flex flex-row\">\n          {/* <div className=\"\">\n            {\" \"}\n            <img src={Lesson} className=\"w-1/5 pl-12\" alt=\"img\" />\n          </div> */}\n\n          <div className=\"cursor-pointer\">\n            <p\n              id=\"name\"\n              className=\"text-4xl text-start ml-24 font-semibold font-sans leading-loose tracking-wider\"\n            >\n              {data}\n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DetailedContentPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport ForgetPassword from \"./pages/ForgetPassword\";\nimport SciencePage from \"./pages/SciencePage\";\nimport EnglishPage from \"./pages/EnglishPage\";\nimport MathPage from \"./pages/MathPage\";\nimport AccountsPage from \"./pages/AccountsPage\";\nimport PreLoginPage from \"./pages/PreLoginPage\";\nimport DetailedContentPage from \"./pages/DetailedData/DetailedContentPage\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<PreLoginPage />} />\n        <Route path=\"/loginpage\" element={<LoginPage />} />\n        <Route path=\"/signuppage\" element={<SignUpPage />} />\n        <Route path=\"/forgetpassword\" element={<ForgetPassword />} />\n\n        <Route path=\"/app\" element={<App />}>\n          {/* Children Route Component */}\n          <Route path=\"sciencepage\" element={<SciencePage />} />\n          <Route\n            path=\"sciencepage/:themeId\"\n            element={<DetailedContentPage />}\n          />\n          <Route path=\"englishpage\" element={<EnglishPage />} />\n          <Route path=\"mathpage\" element={<MathPage />} />\n          <Route path=\"accountspage\" element={<AccountsPage />} />\n          <Route\n            path=\"*\"\n            element={\n              <main style={{ padding: \"1rem\" }}>\n                <p>There's nothing here!</p>\n              </main>\n            }\n          />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}