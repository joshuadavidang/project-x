{"version":3,"sources":["firebase.js","assets/images/login.svg","pages/LoginPage.js","pages/LandingPage.js","assets/images/signup.svg","pages/SignUpPage.js","assets/images/forgetpassword.svg","pages/ForgetPassword.js","App.js","redux/reducers/user.js","redux/store.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","LoginPage","useState","email","setEmailState","password","setPasswordState","isAuthenticated","setIsAuthenticated","loadingAnimation","setLoadingAnimation","user","useSelector","state","value","useEffect","console","log","history","useHistory","className","src","Login","alt","type","name","onChange","e","target","to","onClick","setTimeout","auth","getAuth","signInWithEmailAndPassword","then","userCredential","emailVerified","Swal","fire","push","text","icon","confirmButtonText","catch","error","errorMessage","message","title","size","LandingPage","getEmail","setGetEmail","currentUser","round","alert","signOut","showCancelButton","cancelButtonText","reverseButtons","result","isConfirmed","dismiss","DismissReason","cancel","role","SignUpPage","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","SignUp","createUserWithEmailAndPassword","sendEmailVerification","ForgetPassword","ForgetPasswordImage","sendPasswordResetEmail","App","basename","exact","path","component","userSlice","createSlice","initialState","age","reducers","LOGIN_ACTION","action","payload","actions","configureStore","reducer","userReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.a58e9eda.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjaVXf5f-O7Ao46me8U5v7PE4s98aa3bU\",\n  authDomain: \"project-x-1d9e6.firebaseapp.com\",\n  projectId: \"project-x-1d9e6\",\n  storageBucket: \"project-x-1d9e6.appspot.com\",\n  messagingSenderId: \"888412838530\",\n  appId: \"1:888412838530:web:7f38fb770995e8f280f29b\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport default app;\n","export default __webpack_public_path__ + \"static/media/login.753498d3.svg\";","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n// eslint-disable-next-line\nimport app from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport Login from \"../assets/images/login.svg\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\n// Redux\nimport { useSelector } from \"react-redux\"; // to access state data, to dispatch data\n// import { LOGIN_ACTION } from \"../redux/reducers/user\";\n\nconst LoginPage = () => {\n  const [email, setEmailState] = useState(\"\");\n  const [password, setPasswordState] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loadingAnimation, setLoadingAnimation] = useState(false);\n\n  const user = useSelector((state) => state.user.value);\n  // const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(isAuthenticated);\n    console.log(user);\n  }, [isAuthenticated, user]);\n\n  let history = useHistory();\n\n  const loginBtn = () => {\n    setLoadingAnimation(true);\n\n    setTimeout(() => {\n      const auth = getAuth();\n      signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n          const user = userCredential.user;\n          console.log(user);\n\n          if (user.emailVerified === true) {\n            setIsAuthenticated(true);\n            Swal.fire(\"\", \"Signed in successful\", \"success\");\n            history.push(\"/landingpage\");\n          } else {\n            Swal.fire({\n              text: \"Please verify your email before attempting to login\",\n              icon: \"warning\",\n              confirmButtonText: \"OK\",\n            });\n          }\n        })\n        .catch((error) => {\n          const errorMessage = error.message;\n          console.log(errorMessage);\n          Swal.fire({\n            title: errorMessage,\n            text: \"Please try again\",\n            icon: \"error\",\n            confirmButtonText: \"OK\",\n          });\n        }, setLoadingAnimation(false));\n    }, 600);\n  };\n\n  return (\n    <div>\n      <div className=\" min-h-screen w-screen bg-gray-200 sm: px-6 flex flex-col justify-center\">\n        <div className=\"p-1 xs:p-0 mx-auto md:w-full md:max-w-md\">\n          <div className=\"shadow bg-white w-full rounded-lg divide-y divide-gray-200\">\n            <div className=\"px-10 py-10\">\n              <div className=\"flex justify-center\">\n                <img src={Login} alt=\"login\" className=\"mb-7 w-3/5\" />\n              </div>\n\n              <h1 className=\"font-semibold text-center text-lg mb-3\">\n                Login to your account\n              </h1>\n\n              <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                Email\n              </label>\n              <input\n                className=\"border rounded-lg px-3 py-2 mt-1 mb-4 text-sm w-full\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmailState(e.target.value)}\n              />\n\n              {/* <div className=\"flex flex-row space-x-44\">\n                <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                  Password\n                </label>\n\n                <label className=\"text-sm text-green-600\">\n                  <Link to=\"/forgetpassword\"> Forgot Password?</Link>\n                </label>\n              </div> */}\n\n              <div className=\"md:grid grid-cols-2 gap-x-32\">\n                <div>\n                  <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                    Password\n                  </label>\n                </div>\n\n                <div>\n                  <label className=\"text-sm text-green-600\">\n                    <Link to=\"/forgetpassword\"> Forgot Password?</Link>\n                  </label>\n                </div>\n              </div>\n\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => setPasswordState(e.target.value)}\n                className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\"\n              />\n\n              <button\n                onClick={loginBtn}\n                type=\"button\"\n                className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 \n                hover:from-pink-500 hover:to-yellow-500 text-white w-full py-2.5 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              >\n                {loadingAnimation === true ? (\n                  <BeatLoader size={7} />\n                ) : (\n                  <span className=\"inline-block\">Login</span>\n                )}\n              </button>\n\n              {/* <button\n                onClick={() => {\n                  dispatch(\n                    LOGIN_ACTION({\n                      name: \"Pedro\",\n                      age: 20,\n                      email: \"pedro@gmail.com\",\n                    })\n                  );\n                }}\n                type=\"button\"\n                className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 \n                hover:from-pink-500 hover:to-yellow-500 text-white w-full py-2.5 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              >\n                <span className=\"inline-block\">Login</span>\n              </button> */}\n\n              <p className=\"text-center pt-7 text-gray-600\">\n                Don't have an account? Register{\" \"}\n                <Link to=\"/signup\">\n                  <span className=\"hover:text-green-400 font-bold\">here</span>\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { useEffect, useState } from \"react\";\n// import Joshua from \"../assets/images/joshua.jpeg\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport Avatar from \"react-avatar\";\n\nconst LandingPage = () => {\n  const [getEmail, setGetEmail] = useState(\"\");\n  let history = useHistory();\n\n  useEffect(() => {\n    const auth = getAuth();\n    console.log(auth);\n    console.log(\n      auth.currentUser.email +\n        \" email verified: \" +\n        auth.currentUser.emailVerified\n    );\n    setGetEmail(auth.currentUser.email);\n  }, []);\n\n  const signOutBtn = () => {\n    const auth = getAuth();\n    signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"Sign-out successful\");\n\n        Swal.fire({\n          title: \"Logout?\",\n          text: \"You will be signed out\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonText: \"Yes\",\n          cancelButtonText: \"No\",\n          reverseButtons: true,\n        }).then((result) => {\n          if (result.isConfirmed) {\n            Swal.fire(\"\", \"Logout successful\", \"success\");\n            history.push(\"/\");\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\n            Swal.fire(\"Welcome back\", \"\", \"success\");\n          }\n        });\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  return (\n    <>\n      <div className=\"\">\n        <div className=\"flex flex-row flex-wrap\">\n          <aside className=\"w-full sm:w-1/4 md:w-2/6 xl:w-1/6 bg-gray-200\">\n            <div>\n              <ul className=\"flex flex-col overflow-hidden\">\n                <nav className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 flex flex-col h-screen px-4 text-white rounded-r-3xl\">\n                  <div className=\"flex justify-center m-8\">\n                    {/* <img\n                      src={Joshua}\n                      alt=\"profilePicture\"\n                      className=\" w-20 h-20 rounded-full\"\n                    /> */}\n\n                    <Avatar name={getEmail} size=\"100\" round={true} />\n                  </div>\n\n                  <div className=\"text-center\">\n                    <span>{getEmail}</span>\n                  </div>\n\n                  <div className=\"m-2 cursor-pointer\">\n                    <ul onClick={() => alert(\"Under Construction\")}>\n                      <li className=\"text-center py-3.5 hover:text-white hover:bg-black hover:font-bold rounded rounded-lg\">\n                        <span>English</span>\n                      </li>\n                    </ul>\n\n                    <ul onClick={() => alert(\"Under Construction\")}>\n                      <li className=\"text-center py-3.5 hover:text-white hover:bg-black hover:font-bold rounded rounded-lg\">\n                        <span>Math</span>\n                      </li>\n                    </ul>\n\n                    <ul onClick={() => alert(\"Under Construction\")}>\n                      <li className=\"text-center py-3.5 hover:text-white hover:bg-black hover:font-bold rounded rounded-lg\">\n                        <span>Science</span>\n                      </li>\n                    </ul>\n\n                    <ul\n                      onClick={signOutBtn}\n                      className=\"rounded-full bg-red-700 text-white text-sm m-8 hover:bg-red-900 \"\n                    >\n                      <li className=\"text-center py-3\">\n                        <span>Log Out</span>\n                      </li>\n                    </ul>\n                  </div>\n                </nav>\n              </ul>\n            </div>\n          </aside>\n\n          <main\n            role=\"main\"\n            className=\"w-full sm:w-3/4 md:w-4/6 xl:w-5/6 text-center bg-gray-200\"\n          >\n            <div className=\"mt-3\">\n              <span className=\"font-bold\">English</span>\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-4 mx-10 my-14\">\n              <div className=\"shadow bg-white rounded-lg ml-4\">a</div>\n              <div className=\"shadow bg-white w-full rounded-lg  ml-4\">b</div>\n\n              <div className=\"shadow bg-white w-full rounded-lg ml-4\">c</div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LandingPage;\n","export default __webpack_public_path__ + \"static/media/signup.e9633564.svg\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  sendEmailVerification,\n} from \"firebase/auth\";\n// eslint-disable-next-line\nimport app from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Swal from \"sweetalert2\";\nimport SignUp from \"../assets/images/signup.svg\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst SignUpPage = () => {\n  const [email, setEmailState] = useState(\"\");\n  const [password, setPasswordState] = useState(\"\");\n  const [loadingAnimation, setLoadingAnimation] = useState(false);\n\n  // useEffect(() => {\n  //   console.log(isAuthenticated);\n  // }, []);\n\n  let history = useHistory();\n\n  const signUpBtn = () => {\n    setLoadingAnimation(true);\n\n    setTimeout(() => {\n      const auth = getAuth();\n      createUserWithEmailAndPassword(auth, email, password)\n        .then(() => {\n          sendEmailVerification(auth.currentUser).then(() => {\n            Swal.fire(\n              {\n                text: \"Click on the link in your email to verify your account.\",\n                icon: \"info\",\n                confirmButtonText: \"OK\",\n              },\n              history.push(\"/\")\n            );\n          });\n        })\n        .catch((error) => {\n          const errorMessage = error.message;\n          console.log(errorMessage);\n          Swal.fire({\n            title: errorMessage,\n            text: \"Please try again\",\n            icon: \"error\",\n            confirmButtonText: \"OK\",\n          });\n        }, setLoadingAnimation(false));\n    }, 600);\n  };\n\n  return (\n    <div>\n      <div className=\"min-h-screen w-screen bg-gray-200 sm: px-6 flex flex-col justify-center overflow-y-hidden\">\n        <div className=\"p-1 xs:p-0 mx-auto md:w-full md:max-w-md\">\n          {/* <h1 className=\"font-bold text-center text-2xl mb-5\">Project X</h1> */}\n          <div className=\"bg-white shadow w-full rounded-lg divide-y divide-gray-200\">\n            <div className=\"px-10 py-10\">\n              <Link to=\"/\">\n                {\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                  />\n                </svg>\n              </Link>\n\n              <div className=\"flex justify-center\">\n                <img src={SignUp} alt=\"sign up\" className=\"mb-3 w-3/5\" />\n              </div>\n\n              <h1 className=\"font-semibold text-center text-lg mb-3\">\n                Sign up for an account\n              </h1>\n\n              <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                Email\n              </label>\n              <input\n                className=\"border rounded-lg px-3 py-2 mt-1 mb-4 text-sm w-full\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmailState(e.target.value)}\n              />\n              <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                Password\n              </label>\n\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => setPasswordState(e.target.value)}\n                className=\"border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full\"\n              />\n\n              <button\n                onClick={signUpBtn}\n                type=\"button\"\n                className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\n                hover:from-pink-500 hover:to-yellow-500 text-white w-full py-2.5 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              >\n                {loadingAnimation === true ? (\n                  <BeatLoader size={7} />\n                ) : (\n                  <span className=\"inline-block\">Register</span>\n                )}\n              </button>\n\n              <p className=\"text-center pt-7 text-gray-600\">\n                Have an account? Login{\" \"}\n                <Link to=\"/\">\n                  <span className=\"hover:text-green-400 font-bold\">here</span>\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n","export default __webpack_public_path__ + \"static/media/forgetpassword.8c5534ff.svg\";","import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport ForgetPasswordImage from \"../assets/images/forgetpassword.svg\";\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst ForgetPassword = () => {\n  const [email, setEmailState] = useState(\"\");\n  const [loadingAnimation, setLoadingAnimation] = useState(false);\n\n  let history = useHistory();\n\n  const resetPassword = () => {\n    setLoadingAnimation(true);\n\n    setTimeout(() => {\n      const auth = getAuth();\n      sendPasswordResetEmail(auth, email)\n        .then(() => {\n          // Password reset email sent!\n          Swal.fire(\"\", \"Check your email for further instructions\", \"success\");\n          history.push(\"/\");\n        })\n        .catch((error) => {\n          const errorMessage = error.message;\n          Swal.fire(\"\", errorMessage, \"error\");\n        }, setLoadingAnimation(false));\n    }, 600);\n  };\n  return (\n    <div>\n      <div className=\" min-h-screen w-screen bg-gray-200 sm: px-6 flex flex-col justify-center\">\n        <div className=\"p-1 xs:p-0 mx-auto md:w-full md:max-w-md\">\n          <div className=\"shadow bg-white w-full rounded-lg divide-y divide-gray-200\">\n            <div className=\"px-10 py-10\">\n              <Link to=\"/\">\n                {\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                  />\n                </svg>\n              </Link>\n\n              <div className=\"flex justify-center\">\n                <img\n                  src={ForgetPasswordImage}\n                  alt=\"forgetpassword\"\n                  className=\"mb-7 w-3/5\"\n                />\n              </div>\n\n              <h1 className=\"font-semibold text-center text-lg mb-3\">\n                Enter your email to reset your password\n              </h1>\n\n              <label className=\"font-semibold text-sm text-gray-600 pb-1 block\">\n                Email\n              </label>\n              <input\n                className=\"border rounded-lg px-3 py-2 mt-1 mb-4 text-sm w-full\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmailState(e.target.value)}\n              />\n\n              <button\n                onClick={resetPassword}\n                type=\"button\"\n                className=\"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 \n                  hover:from-pink-500 hover:to-yellow-500 text-white w-full py-2.5 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\"\n              >\n                {loadingAnimation === true ? (\n                  <BeatLoader size={7} />\n                ) : (\n                  <span className=\"inline-block\">Reset Password</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport LoginPage from \"./pages/LoginPage\";\nimport LandingPage from \"./pages/LandingPage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport ForgetPassword from \"./pages/ForgetPassword\";\n\nfunction App() {\n  return (\n    <Router basename=\"/project-x\">\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route path=\"/signup\" component={SignUpPage} />\n        <Route path=\"/landingpage\" component={LandingPage} />\n        <Route path=\"/forgetpassword\" component={ForgetPassword} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: { value: { name: \"\", age: 0, email: \"\" } },\n  // functions to alter values\n  reducers: {\n    LOGIN_ACTION: (state, action) => {\n      // do something with state, to change the value after login in\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { LOGIN_ACTION } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./reducers/user\";\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}